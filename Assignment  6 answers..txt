1.. What are the six combinations of access modifier keywords and what do they do? 
Public:can be accessed from ahnywhere in the program
Private:can only accessed withing the containing class.
Protected:Can only be accessed within the containing class or derived class
Internal:Can only be access within the same assembly
Protected Internal:can only be accessed within the containing assembly, or within a derived class from any assembly
Private Internal:can only be accessed within the containing class or struct, or within a derived class from the same assembly
2.What is the difference between the static, const, and readonly keywords when applied to a type member?
static: Belongs to the type itself, can be accessed without creating an instance of the type.
const:Compile-time constant, value is fixed and cannot be changed at runtime.
readonly:Runtime constant, value can be set only in the constructor or at the point of declaration and cannot be changed afterwards
3. What does a constructor do?
Constructor icreates a object of a class by passing attributes to the object and setting inital values of its fields and properties.

4. Why is the partial keyword useful?
a.Modularity: Large classes or interfaces can be difficult to manage in a single file, and splitting them into multiple partial files can make the code easier to understand and maintain.

b.Collaboration: When multiple developers are working on the same class or interface, using partial definitions can make it easier to divide the work and avoid conflicts when merging changes.

c.Code generation: If you are using a tool or library that generates code, you can use partial definitions to customize parts of the generated code without modifying the original source file.

d.Separation of concerns: If a class or interface has multiple responsibilities, you can split the definition into partial files based on each responsibility, which can make the code easier to understand and modify
5. What is a tuple?
	A tuple is a data structure in C# that allows you to group together a fixed number of values of different types
6. What does the C# record keyword do?
t simplifies the creation of immutable classes that store data. When a class is declared as a record, the C# compiler generates a lot of code automatically, including the constructors, property getters, Equals() method, GetHashCode() method, and ToString() method.
7. What does overloading and overriding mean?
8. What is the difference between a field and a property?
9. How do you make a method parameter optional?
10. What is an interface and how is it different from abstract class?
11. What accessibility level are members of an interface?
12. True/False. Polymorphism allows derived classes to provide different implementations
of the same method.
13. True/False. The override keyword is used to indicate that a method in a derived class is
providing its own implementation of a method.
14. True/False. The new keyword is used to indicate that a method in a derived class is
providing its own implementation of a method.
15. True/False. Abstract methods can be used in a normal (non-abstract) class. 16.
True/False. Normal (non-abstract) methods can be used in an abstract class. 17. True/False.
Derived classes can override methods that were virtual in the base class. 18. True/False.
Derived classes can override methods that were abstract in the base class. 19. True/False.
In a derived class, you can override a method that was neither virtual non abstract in the
base class.
20. True/False. A class that implements an interface does not have to provide an
implementation for all of the members of the interface.
21. True/False. A class that implements an interface is allowed to have other members that
arenâ€™t defined in the interface.
22. True/False. A class can have more than one base class.
23. True/False. A class can implement more than one interface.What is meant by the terms managed resource and unmanaged resource in .NET
24. What's the purpose of Garbage Collector in .NET?

Only One LeetCode Question: 15.